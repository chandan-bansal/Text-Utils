{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","about","onClick","togglemode","role","htmlFor","TextForm","useState","text","setText","style","color","backgroundColor","value","onChange","event","target","rows","placeholder","newText","toUpperCase","showAlert","toLowerCase","i","length","split","filter","el","About","Alert","height","alert","msg","defaultProps","App","setmode","setalert","message","setTimeout","document","body","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.79cee1d6.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to = \"/\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to = \"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to = \"/about\">{props.about}</Link>\r\n        </li>\r\n      </ul>\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.togglemode} role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title : PropTypes.string.isRequired, about: PropTypes.string.isRequired}\r\nNavbar.defaultProps = {title : 'Chandan', about : 'Hello'}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"\")\r\n    \r\n    const handlechange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n    const handleUpclick =() => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to UpperCase\", \"success\");\r\n    }\r\n    const handlelowclick =() => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Convertes to LowerCase\", \"success\");\r\n    }\r\n    const invertandclick =() => {\r\n        let newText = \"\";\r\n        for(let i=text.length - 1; i>=0; i--){\r\n            newText += text[i];\r\n            props.showAlert(\"Inverted\", \"success\");\r\n        }\r\n        setText(newText)\r\n    }\r\n    return (\r\n        <>\r\n        <div>\r\n            <div className=\"mb-3\" style ={{color : props.mode==='dark'?'white':'black'}}>\r\n            <label htmlFor=\"box\" className=\"form-label\" style ={{color : props.mode==='dark'?'white':'black'}}>{props.title}</label>\r\n            <textarea className=\"form-control\" style ={{backgroundColor : props.mode==='dark'?'#1A374D':'white', color : props.mode==='dark'?'white':'black' }} value = {text} onChange = {handlechange} id=\"box\" rows=\"8\" placeholder=\"Enter text here\"></textarea>\r\n            </div>\r\n            <button className='btn btn-primary mx-1' onClick={handleUpclick}>Uppercase</button>\r\n            <button className='btn btn-primary mx-1' onClick={handlelowclick}>Lowercase</button>\r\n            <button className='btn btn-primary mx-1' onClick={invertandclick}>Invert</button>\r\n            \r\n        </div>\r\n        \r\n        <div className='container' style ={{color : props.mode==='dark'?'white':'black'}}>\r\n            <h1>Text Summary</h1>\r\n            <p> No. of words = {(text.split(/\\s+/).filter((el) =>{return el.length !==0})).length}</p>\r\n            <p> No. of letters = {text.length}</p>\r\n            <p> Minutes required for reading = {0.008 * (text.split(/\\s+/).filter((el) =>{return el.length !==0})).length}</p>\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n    return (\r\n        <div>\r\n            \r\n            \r\n            <div className = 'container' style ={{color : props.mode==='dark'?'white':'black'}}><h1>About Me</h1> <p>Hello I am Chandan Bansal. I am currently pursuing B.Tech from Indian Institute of Information and Technology, Una. Currently indulged in web development but have great interest in data science.</p></div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        <div style = {{height: '50px'}}>\r\n        {props.alert && \r\n        <div className={`alert alert-${props.alert.type}`} role=\"alert\">\r\n            {props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm'\nimport About from './components/About';\nimport Alert from './components/Alert'\nimport {useState} from 'react'\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setalert] = useState(null);\n\n  const showAlert = (message, type) =>{\n    setalert({\n    msg: message,\n    type: type})\n  }\n\n  setTimeout(showAlert, 2000)\n  const togglemode = () =>{\n    if(mode === \"dark\"){setmode(\"light\"); document.body.style.backgroundColor = \"white\"; showAlert(\"Light mode\", \"success\")}\n    else{setmode(\"dark\"); document.body.style.backgroundColor = \"grey\"; showAlert(\"Dark mode\", \"success\")}\n  }\n  return (\n    <div className=\"App\" >\n      <Router>\n      <Navbar title='TextUtils' about = 'About Author' mode = {mode} togglemode={togglemode}/>\n      <Alert alert = {alert}/>\n      <Routes>\n        <Route path=\"/about\" element = {<About  mode = {mode}/>} />\n        <Route path=\"/\" element = {\n            <div className='container'>\n              <TextForm showAlert = {showAlert} title='Enter the text here' mode = {mode}/>\n            </div>} />\n          \n      </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}